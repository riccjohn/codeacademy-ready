{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Light;\f1\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red47\green47\blue49;\red255\green255\blue255;\red241\green65\blue73;
\red25\green49\blue68;\red202\green203\blue205;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{none\}.}{\leveltext\leveltemplateid1\'01.;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww16700\viewh17040\viewkind0
\deftab720
\pard\pardeftab720\sl640\sa360\partightenfactor0

\f0\fs36 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Let's try out TDD by running tests and fixing code on your own computer.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl640\sa180\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Download and unzip the project located {\field{\*\fldinst{HYPERLINK "https://s3.amazonaws.com/codecademy-content/courses/freelance-1/unit-8/F1U8-tdd.zip"}}{\fldrslt \cf4 \strokec4 here}}.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Open 
\i index.html
\i0  in Google Chrome and open the JavaScript Console in Chrome DevTools (located in View > Developer > JavaScript Console).Verify that you are in the "Console" tab.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 In the console, enter the command to run the tests for this project, 
\f1\fs34 \cf5 \cb6 \strokec5 Tests.runAllTests()
\f0\fs36 \cf2 \cb3 \strokec2 . As you can see, there are multiple failing tests. Let's check them out.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Open the project in a text editor. Open the 
\i tests.js
\i0  file. Looking at 
\f1\fs34 \cf5 \cb6 \strokec5 Tests.runAllTests
\f0\fs36 \cf2 \cb3 \strokec2 , we can see that it runs through all of our tests \'97 in this case 
\f1\fs34 \cf5 \cb6 \strokec5 Tests.testReturnsTrue
\f0\fs36 \cf2 \cb3 \strokec2 , 
\f1\fs34 \cf5 \cb6 \strokec5 Tests.testReturnsHello
\f0\fs36 \cf2 \cb3 \strokec2 , and 
\f1\fs34 \cf5 \cb6 \strokec5 Tests.testReturnsTheMeaningOfLife
\f0\fs36 \cf2 \cb3 \strokec2 . Each test runs its corresponding method and checks to see if the method returns the expected value. Since the tests are failing, we can infer that they are not implemented properly. Let's look at the code.\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Open 
\i main.js
\i0  and examine the 
\f1\fs34 \cf5 \cb6 \strokec5 Main.returnsTrue
\f0\fs36 \cf2 \cb3 \strokec2  method. As you might notice, this method returns 
\f1\fs34 \cf5 \cb6 \strokec5 false
\f0\fs36 \cf2 \cb3 \strokec2 . Change 
\f1\fs34 \cf5 \cb6 \strokec5 return false;
\f0\fs36 \cf2 \cb3 \strokec2  to 
\f1\fs34 \cf5 \cb6 \strokec5 return true;
\f0\fs36 \cf2 \cb3 \strokec2 .\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Since we believe we have now fixed the method, go back to Chrome and re-run 
\f1\fs34 \cf5 \cb6 \strokec5 Tests.runAllTests()
\f0\fs36 \cf2 \cb3 \strokec2 . The 'returnsTrue' test should now pass!\cb1 \
\ls1\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Follow the same process for the 
\f1\fs34 \cf5 \cb6 \strokec5 Main.returnsHello()
\f0\fs36 \cf2 \cb3 \strokec2  method. Fix what you believe is causing the bug and re-run the tests to see if the 'returnsHello' test now passes. Iterate until the test passes.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl640\sa360\partightenfactor0
\ls1\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	.	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Once you have fixed the 
\f1\fs34 \cf5 \cb6 \strokec5 .returnsHello()
\f0\fs36 \cf2 \cb3 \strokec2  method, fix the 
\f1\fs34 \cf5 \cb6 \strokec5 .returnsTheMeaningOfLife()
\f0\fs36 \cf2 \cb3 \strokec2  method. This one is a little trickier since it actually has two failing tests. One fix should solve both of them though. Iterate until you get all of the tests to pass.\cb1 \
\pard\pardeftab720\sl640\partightenfactor0
\cf2 \cb3 Congratulations! You now have a working test suite for all of these methods. As you can imagine, when using TDD to produce full web pages there will be many more tests to run and methods to write/fix. However, the steps will always remain the same: run, implement, and run again. Making TDD a permanent part of your development workflow will help ensure your code always works as intended and gives you incentive to keep implementing features!\
}